use fastmoneypro_remit
go
--EXEC PROC_TXN_REFERRAL_CHANGE @FLAG = 'update', @CONTROLNO = '21738200', @USER = 'SYSTEM', @REFERRAL_CODE_NEW = 'JME0063'

ALTER PROC PROC_TXN_REFERRAL_CHANGE
(
	@FLAG VARCHAR(20)
	,@CONTROLNO VARCHAR(30)
	,@USER VARCHAR(50)
	,@REFERRAL_CODE_NEW VARCHAR(30) = NULL
)
AS
SET NOCOUNT ON;
SET XACT_ABORT ON;
BEGIN TRY
	IF @FLAG = 'UPDATE'
	BEGIN
		DECLARE @TRANID BIGINT, @REFERRAL_CODE_OLD VARCHAR(30), @T_AMT MONEY, @FX_GAIN MONEY,
				@REFERRAL_TYPE_OLD VARCHAR(2), @REFERRAL_TYPE_NEW VARCHAR(2), @REFERRAL_ID_NEW INT, @REFERRAL_ID_OLD INT, @PAYMENT_METHOD VARCHAR(30),
				@NEW_ACC_NUM VARCHAR(30), @OLD_ACC_NUM VARCHAR(30), @REF_NUM VARCHAR(20), @OLD_REFERRAL_BRANCH_ID INT, @NEW_REFERRAL_BRANCH_ID INT,
				@OLD_TRANSIT_ACC VARCHAR(30), @NEW_TRANSIT_ACC VARCHAR(30), @GL_CODE INT, @isSAgentInternalAgent CHAR(1), @USERID INT,
				@OLD_COMM_ACC VARCHAR(30), @AGENT_COMM MONEY, @IS_USER_OF_SAME_BRANCH_OLD CHAR(1) = 'N', @sendingCommExpences VARCHAR(30) = '910139266612',
				@NEW_COMM_ACC VARCHAR(30), @pAgentComm MONEY


		DECLARE @COMMISSION_AMT MONEY, @IS_NEW_CUSTOMER CHAR(1), @PAYOUT_PARTNER INT, @CUSTOMER_ID BIGINT, @S_AGENT INT, @AMOUNT MONEY, @TRAN_DATE VARCHAR(20),
			@COLL_MODE VARCHAR(30), @TRAN_STATUS VARCHAR(20)


		SELECT @TRANID = R.ID, @REFERRAL_CODE_OLD = ISNULL(R.PROMOTIONCODE, ''), @FX_GAIN = ISNULL(AGENTFXGAIN, 0), @T_AMT = TAMT, @PAYMENT_METHOD = PAYMENTMETHOD,
			@COMMISSION_AMT = ISNULL(SERVICECHARGE, 0), @IS_NEW_CUSTOMER = ISNULL(isFirstTran, 'N'), @PAYOUT_PARTNER = PSUPERAGENT, @CUSTOMER_ID = TS.CUSTOMERID,
			@S_AGENT = SAGENT, @AMOUNT = CAMT, @TRAN_DATE = R.CREATEDDATE, @COLL_MODE = COLLMODE, @TRAN_STATUS = TRANSTATUS, @USERID = AU.USERID,
			@pAgentComm = r.pAgentComm
		FROM REMITTRAN R(NOLOCK) 
		INNER JOIN TRANSENDERS TS(NOLOCK) ON TS.TRANID = R.ID
		LEFT JOIN APPLICATIONUSERS AU(NOLOCK) ON AU.USERNAME = R.CREATEDBY
		WHERE CONTROLNO = DBO.FNAENCRYPTSTRING(@CONTROLNO)
		
		
		IF @TRAN_STATUS = 'CANCEL'
		BEGIN
			EXEC PROC_ERRORHANDLER 1, 'TXN IS IN CANCEL STATUS', NULL
			RETURN
		END

		EXEC PROC_UPDATE_AVAILABALE_BALANCE @FLAG='CANCEL',@S_AGENT = @S_AGENT,@S_USER = @USERID,@REFERRAL_CODE = @REFERRAL_CODE_OLD
		,@C_AMT = @AMOUNT

		BEGIN TRANSACTION
			IF EXISTS(SELECT * FROM BRANCH_CASH_IN_OUT (NOLOCK) WHERE referenceId = @TRANID AND HEAD = 'Txn Send')
			BEGIN
				DELETE FROM BRANCH_CASH_IN_OUT WHERE referenceId = @TRANID AND HEAD = 'Txn Send'
			END
			BEGIN
				EXEC PRO_UPDATE_VAULT_TRANSFER_REFERRAL_CHANGE @TRAN_ID = @TRANID
			END

			INSERT INTO REFERRAL_HISTORY(TRAN_ID, OLD_REFERRAL, NEW_REFERRAL, MODIFIED_BY, MODIFIED_DATE)
			SELECT @TRANID, @REFERRAL_CODE_OLD, @REFERRAL_CODE_NEW, @USER, GETDATE()

			--OLD REFERRAL
			SELECT @REFERRAL_ID_NEW = ROW_ID, @REFERRAL_TYPE_NEW = REFERRAL_TYPE_CODE, @NEW_REFERRAL_BRANCH_ID = BRANCH_ID
			FROM REFERRAL_AGENT_WISE (NOLOCK)
			WHERE REFERRAL_CODE = @REFERRAL_CODE_NEW

			--NEW REFERRAL
			SELECT @REFERRAL_ID_OLD = ROW_ID, @REFERRAL_TYPE_OLD = REFERRAL_TYPE_CODE, @OLD_REFERRAL_BRANCH_ID = BRANCH_ID
			FROM REFERRAL_AGENT_WISE (NOLOCK)
			WHERE REFERRAL_CODE = @REFERRAL_CODE_OLD

			SELECT TOP 1 @REF_NUM = REF_NUM
			FROM fastmoneypro_account.dbo.tran_master (NOLOCK)
			WHERE FIELD1 = @CONTROLNO
			AND FIELD2 = 'Remittance Voucher'
			AND ACCT_TYPE_CODE IS NULL

			DELETE FROM FASTMONEYPRO_ACCOUNT.DBO.TRANSIT_CASH_SETTLEMENT WHERE REFERENCE_ID = @TRANID
			DELETE FROM REFERRAL_INCENTIVE_TRANSACTION_WISE WHERE TRAN_ID = @TRANID

			UPDATE REMITTRAN SET PROMOTIONCODE = @REFERRAL_CODE_NEW
			WHERE ID = @TRANID


			IF EXISTS(SELECT 1 FROM REMITTRAN R(NOLOCK) 
						INNER JOIN AGENTMASTER M(NOLOCK) ON M.AGENTID = R.SAGENT
						WHERE ID = @TRANID AND ISNULL(actAsBranch, 'N') = 'N')
			BEGIN
				UPDATE R SET R.SAGENT = M.AGENTID, R.SAGENTNAME = M.AGENTNAME, R.SBRANCH = M.AGENTID, R.SBRANCHNAME = M.AGENTNAME
				FROM REMITTRAN R(NOLOCK) 
				INNER JOIN APPLICATIONUSERS U(NOLOCK) ON U.USERNAME = R.CREATEDBY
				INNER JOIN AGENTMASTER M(NOLOCK) ON M.AGENTID = U.AGENTID
				WHERE ID = @TRANID
			END
			
			IF EXISTS(SELECT 1 FROM REFERRAL_AGENT_WISE WHERE REFERRAL_CODE = @REFERRAL_CODE_NEW AND AGENT_ID <> 0)
			BEGIN
				UPDATE R SET R.SAGENT = AM.AGENTID, R.SAGENTNAME = AM.AGENTNAME, R.SBRANCH = AM.AGENTID, R.SBRANCHNAME = AM.AGENTNAME 
				FROM REMITTRAN R
				INNER JOIN REFERRAL_AGENT_WISE A ON A.REFERRAL_CODE = @REFERRAL_CODE_NEW
				INNER JOIN AGENTMASTER AM ON AM.AGENTID = A.AGENT_ID 
				WHERE R.ID = @TRANID

				UPDATE REMITTRAN SET PROMOTIONCODE = NULL WHERE ID = @TRANID
			END
			
			SELECT @S_AGENT = SAGENT, @USERID = AU.USERID, @AGENT_COMM = SAGENTCOMM
			FROM REMITTRAN R(NOLOCK) 
			LEFT JOIN APPLICATIONUSERS AU(NOLOCK) ON AU.USERNAME = R.CREATEDBY
			WHERE ID = @TRANID

			EXEC PROC_UPDATE_AVAILABALE_BALANCE @FLAG='SEND',@S_AGENT = @S_AGENT,@S_USER = @USERID,@REFERRAL_CODE = @REFERRAL_CODE_NEW,@C_AMT = @AMOUNT

			IF @COLL_MODE = 'Cash Collect' AND (EXISTS(SELECT 1 FROM AGENTMASTER (NOLOCK) WHERE AGENTID = @S_AGENT AND ISNULL(isIntl, 0) = 1) OR (@REFERRAL_TYPE_NEW = 'RB') OR ISNULL(@REFERRAL_TYPE_NEW, '') = '')
			BEGIN
				IF EXISTS(SELECT 1 FROM AGENTMASTER (NOLOCK) WHERE AGENTID = @S_AGENT AND ISNULL(ISINTL, 0) = 1)
				BEGIN
					SELECT @USERID = USERID
					FROM APPLICATIONUSERS AU(NOLOCK) 
					WHERE AGENTID = @S_AGENT
				END
					
				IF EXISTS(SELECT 1 FROM REFERRAL_AGENT_WISE (NOLOCK) WHERE REFERRAL_CODE = @REFERRAL_TYPE_NEW AND REFERRAL_TYPE_CODE = 'RB') AND ISNULL(@REFERRAL_TYPE_NEW, '') <> ''
				BEGIN
					IF EXISTS(SELECT 1 FROM APPLICATIONUSERS (NOLOCK) WHERE USERID = @USERID AND AGENTID = @S_AGENT)
					BEGIN
						--INSERT INTO CASH AND VAULT TABLE FOR BRANCH CASH HOLD LIMIT CHECK
						EXEC PROC_PUSH_CASH_IN_OUT @flag='IN', @user=@USER,@amount=@AMOUNT,
										@tranDate=@TRAN_DATE,@head='Txn Send',
										@remarks='Txn Send',@branchId=@S_AGENT,
										@isAutoApprove=1,@userId=@USERID,@referenceId=@TRANID
					END
					ELSE
					BEGIN
						--INSERT INTO CASH AND VAULT TABLE FOR BRANCH CASH HOLD LIMIT CHECK
						EXEC PROC_PUSH_CASH_IN_OUT @flag='IN', @user=@USER,@amount=@AMOUNT,
										@tranDate=@TRAN_DATE,@head='Txn Send',
										@remarks='Txn Send',@branchId=@S_AGENT,
										@isAutoApprove=1,@userId=0,@referenceId=@TRANID
					END
				END
				ELSE 
				BEGIN
					--INSERT INTO CASH AND VAULT TABLE FOR BRANCH CASH HOLD LIMIT CHECK
					EXEC PROC_PUSH_CASH_IN_OUT @flag='IN', @user=@USER,@amount=@AMOUNT,
								@tranDate=@TRAN_DATE,@head='Txn Send',
								@remarks='Txn Send',@branchId=@S_AGENT,
								@isAutoApprove=1,@userId=@USERID,@referenceId=@TRANID
				END
			END

			--CALCULATE COMM
			EXEC PROC_CALCULATE_REFERRAL_COMM @COMMISSION_AMT = @COMMISSION_AMT, @T_AMT = @T_AMT, @FX = @FX_GAIN, @IS_NEW_CUSTOMER = @IS_NEW_CUSTOMER,
							@REFERRAL_CODE = @REFERRAL_CODE_NEW, @PAYOUT_PARTNER = @PAYOUT_PARTNER, @CUSTOMER_ID = @CUSTOMER_ID, @TRAN_ID = @TRANID, 
							@S_AGENT = @S_AGENT, @AMOUNT = @AMOUNT, @USER = @USER, @TRAN_DATE = @TRAN_DATE, @COLL_MODE = @COLL_MODE, @P_AGENT_COMM_AMT = @pAgentComm
			
			DELETE FROM fastmoneypro_account.dbo.tran_master WHERE REF_NUM = @REF_NUM
			DELETE FROM fastmoneypro_account.dbo.tran_masterDETAIL WHERE REF_NUM = @REF_NUM

			EXEC FASTMONEYPRO_ACCOUNT.DBO.proc_transactionVoucherEntry @controlNo = @CONTROLNO, @refNum = @REF_NUM

			IF @@TRANCOUNT > 0
				COMMIT TRANSACTION

			EXEC PROC_ERRORHANDLER 0, 'REFERRAL MOdified', NULL
			RETURN
		END
		ELSE IF @FLAG = 'SELECT'
		BEGIN	
			SELECT @TRANID = R.ID, @TRAN_STATUS = TRANSTATUS
			FROM REMITTRAN R(NOLOCK) 
			WHERE CONTROLNO = DBO.FNAENCRYPTSTRING(@CONTROLNO)

			IF @TRANID IS NULL
			BEGIN
				EXEC PROC_ERRORHANDLER 1, 'TXN NOT FOUND!', NULL
				RETURN
			END

			--IF @TRAN_STATUS = 'CANCEL'
			--BEGIN
			--	EXEC PROC_ERRORHANDLER 1, 'TXN IS IN CANCEL STATUS', NULL
			--	RETURN
			--END

			SELECT ErrorCode = 0, Msg = 'Success', R.SENDERNAME, R.RECEIVERNAME, REFERRAL_NAME = CASE WHEN A.REFERRAL_NAME IS NULL THEN B.REFERRAL_NAME ELSE A.REFERRAL_NAME END, 
			REFERRAL_CODE = CASE WHEN A.REFERRAL_CODE IS NULL THEN B.REFERRAL_CODE ELSE A.REFERRAL_CODE END, R.CAMT, R.TAMT, R.PAMT, R.PCOUNTRY, R.ID, R.COLLMODE, R.PAYOUTCURR,
			R.PSUPERAGENT
			FROM remitTran R(NOLOCK)
			LEFT JOIN REFERRAL_AGENT_WISE A(NOLOCK) ON A.REFERRAL_CODE = R.PROMOTIONCODE
			LEFT JOIN REFERRAL_AGENT_WISE B(NOLOCK) ON B.AGENT_ID = R.SAGENT
			WHERE R.ID = @TRANID
		END	
END TRY
BEGIN CATCH
     IF @@TRANCOUNT > 0
     ROLLBACK TRANSACTION
     SELECT 1 error_code, ERROR_MESSAGE() msg, NULL id
END CATCH



