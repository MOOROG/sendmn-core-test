--EXEC  PROC_CASH_STATUS_REPORT @FLAG = 'cash-rpt',@user='admin',@DATE='2019-07-10',@AGENT_ID=394392
--EXEC  PROC_CASH_STATUS_REPORT @FLAG = 'drill-down1',@user='admin',@DATE='2019-11-06',@AGENT_ID='394389'
--EXEC  PROC_CASH_STATUS_REPORT @FLAG = 'cash-rpt',@user='admin',@DATE='2019-01-03',@AGENT_ID=null

ALTER PROC PROC_CASH_STATUS_REPORT
(
	@FLAG VARCHAR(20)
	,@DATE VARCHAR(25) = NULL
	,@USER VARCHAR(50) = NULL
	,@AGENT_ID INT = NULL
)
AS
SET NOCOUNT ON;
SET XACT_ABORT ON;
BEGIN
	IF @FLAG = 'cash-rpt'
	BEGIN
		CREATE TABLE #TEMP_RPT(BRANCH_NAME VARCHAR(100), BRANCH_ID INT, OPENING_BALANCE MONEY, IN_AMOUNT MONEY, OUT_AMOUNT MONEY,
							VAULT_IN MONEY, VAULT_OUT MONEY, CLOSING_BALANCE MONEY)

		INSERT INTO #TEMP_RPT (BRANCH_ID, BRANCH_NAME)
		SELECT AGENTID, AGENTNAME 
		FROM AGENTMASTER WHERE PARENTID = 393877 
		--AND ISNULL(ISINTL, 0) = 0
		AND AGENTID <> 394395
		UNION ALL 
		SELECT AGENTID = 0, AGENTNAME = 'Cash in Transit'
		UNION ALL
		SELECT AGENTID = -1, AGENTNAME = 'Bank Collected'
		
		CREATE TABLE #OPENING_BAL(BRANCH_ID INT, OPENING_BALANCE MONEY)

		INSERT INTO #OPENING_BAL(BRANCH_ID, OPENING_BALANCE)
		SELECT BRANCH = branchId, OPENING_BALANCE = SUM(inAmount) - SUM(outAmount)
		FROM BRANCH_CASH_IN_OUT_HISTORY B(NOLOCK)
		INNER JOIN AGENTMASTER AM(NOLOCK) ON AM.AGENTID = B.BRANCHID
		WHERE tranDate < @DATE
		AND B.APPROVEDDATE IS NOT NULL
		GROUP BY branchId, AM.AGENTNAME 
		UNION ALL
		SELECT BRANCH = 0, OPENING_BALANCE = SUM(IN_AMOUNT) - SUM(OUT_AMOUNT)
		FROM FASTMONEYPRO_ACCOUNT.DBO.TRANSIT_CASH_SETTLEMENT
		WHERE TRAN_DATE < @DATE

		UPDATE T SET T.OPENING_BALANCE = O.OPENING_BALANCE
		FROM #TEMP_RPT T
		INNER JOIN #OPENING_BAL O ON O.BRANCH_ID = T.BRANCH_ID

		--INSERT INTO #TEMP_RPT(BRANCH_NAME, BRANCH_ID, OPENING_BALANCE)
		EXEC  PROC_CASH_STATUS_REPORT @FLAG = 'cash-rpt',@user='admin',@DATE='2019-07-10',@AGENT_ID=394392
		IF (CAST(@DATE AS DATE) = CAST(GETDATE() AS DATE) OR CAST(@DATE AS DATE) > CAST(GETDATE() AS DATE))
		BEGIN
			SELECT inAmount, outAmount, branchId , APPROVEDDATE, tranDate, referenceId, HEAD, USERID
			INTO #BRANCH_CASH_IN_OUT
			FROM BRANCH_CASH_IN_OUT B
			WHERE tranDate BETWEEN @DATE AND @DATE + ' 23:59:59'
			AND B.APPROVEDDATE IS NOT NULL

			DELETE FROM #BRANCH_CASH_IN_OUT
			WHERE referenceId IN (SELECT referenceId FROM #BRANCH_CASH_IN_OUT GROUP BY referenceId HAVING COUNT(1) = 2)

			SELECT SUM(CASE WHEN HEAD = 'Txn Send' THEN inAmount ELSE 0 END) IN_AMOUNT, SUM(CASE WHEN HEAD = 'Transfer To Vault' THEN outAmount ELSE 0 END) OUT_AMOUNT
			,SUM(CASE WHEN HEAD <> 'Txn Send' AND USERID = 0 THEN inAmount ELSE 0 END) VAULT_IN, SUM(CASE WHEN HEAD <> 'Txn Send' AND USERID = 0 THEN outAmount ELSE 0 END) VAULT_OUT, branchId
			INTO #TEMP
			FROM #BRANCH_CASH_IN_OUT B(NOLOCK)
			GROUP BY branchId

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT R
			INNER JOIN #TEMP T ON T.branchId = R.BRANCH_ID
		END
		ELSE
		BEGIN
			SELECT inAmount, outAmount, branchId , APPROVEDDATE, tranDate, referenceId, HEAD, USERID
			INTO #BRANCH_CASH_IN_OUT_HISTORY
			FROM BRANCH_CASH_IN_OUT_HISTORY B
			WHERE tranDate BETWEEN @DATE AND @DATE + ' 23:59:59'
			AND B.APPROVEDDATE IS NOT NULL
			
			DELETE FROM #BRANCH_CASH_IN_OUT_HISTORY
			WHERE referenceId IN (SELECT referenceId FROM #BRANCH_CASH_IN_OUT_HISTORY GROUP BY referenceId HAVING COUNT(1) = 2)

			SELECT SUM(CASE WHEN HEAD = 'Txn Send' THEN inAmount ELSE 0 END) IN_AMOUNT, SUM(CASE WHEN HEAD = 'Transfer To Vault' THEN outAmount ELSE 0 END) OUT_AMOUNT
			,SUM(CASE WHEN HEAD <> 'Txn Send' AND USERID = 0 THEN inAmount ELSE 0 END) VAULT_IN, SUM(CASE WHEN HEAD <> 'Txn Send' AND USERID = 0 THEN outAmount ELSE 0 END) VAULT_OUT, branchId
			INTO #TEMP1
			FROM #BRANCH_CASH_IN_OUT_HISTORY B(NOLOCK)
			GROUP BY branchId

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT R
			INNER JOIN #TEMP1 T ON T.branchId = R.BRANCH_ID
		END
		
		SELECT SUM(CASE WHEN ISNULL(CANCELAPPROVEDDATE, '1917-01-01') BETWEEN @DATE AND @DATE + ' 23:59:59' THEN 0 ELSE CAMT END) IN_AMOUNT
		INTO #BANKTXN
		FROM REMITTRAN (NOLOCK)
		WHERE CREATEDDATE BETWEEN @DATE AND @DATE + ' 23:59:59'
		AND COLLMODE = 'BANK DEPOSIT'

		UPDATE T SET T.IN_AMOUNT =  TR.IN_AMOUNT 
		FROM #BANKTXN TR(NOLOCK)
		INNER JOIN #TEMP_RPT T(NOLOCK) ON T.BRANCH_ID = -1
		
		SELECT IN_AMOUNT, OUT_AMOUNT, REFERENCE_ID
		INTO #TRANSIT_CASH_SETTLEMENT
		FROM FASTMONEYPRO_ACCOUNT.DBO.TRANSIT_CASH_SETTLEMENT TR(NOLOCK)
		WHERE TRAN_DATE BETWEEN @DATE AND @DATE + ' 23:59:59'

		DELETE FROM #TRANSIT_CASH_SETTLEMENT
		WHERE REFERENCE_ID IN (SELECT REFERENCE_ID FROM #TRANSIT_CASH_SETTLEMENT GROUP BY REFERENCE_ID HAVING COUNT(1) = 2)

		SELECT SUM(TR.IN_AMOUNT) IN_AMOUNT, SUM(TR.OUT_AMOUNT) OUT_AMOUNT
		INTO #TEMP_TRANSIT 
		FROM #TRANSIT_CASH_SETTLEMENT TR(NOLOCK)

		UPDATE T SET T.IN_AMOUNT =  TR.IN_AMOUNT, T.OUT_AMOUNT = TR.OUT_AMOUNT
		FROM #TEMP_TRANSIT TR(NOLOCK)
		INNER JOIN #TEMP_RPT T(NOLOCK) ON T.BRANCH_ID = 0

		UPDATE #TEMP_RPT SET CLOSING_BALANCE = ISNULL(OPENING_BALANCE, 0) + ISNULL(IN_AMOUNT, 0) - ISNULL(OUT_AMOUNT, 0) + ISNULL(VAULT_IN, 0) - ISNULL(VAULT_OUT, 0)
		WHERE BRANCH_ID <> -1

		SELECT BRANCH_NAME = CASE WHEN BRANCH_ID NOT IN (0, -1) THEN'<a href=''/RemittanceSystem/RemittanceReports/Reports.aspx?reportName=cashstatus&flag=drill-down1&asOfDate='+@DATE+'&branchId='+CAST(BRANCH_ID AS VARCHAR)+'''>'+BRANCH_NAME+'</a>'
								ELSE BRANCH_NAME END,
			  	OPENING_BALANCE, 
				IN_AMOUNT, 
				OUT_AMOUNT, 
				VAULT_IN,
				VAULT_OUT,
				CLOSING_BALANCE 
		FROM #TEMP_RPT

		EXEC proc_errorHandler '0', 'Report has been prepared successfully.', NULL
		SELECT  'As Of Date' head, @DATE 

		SELECT  'Cash Status Report' title
		RETURN
	END
	IF @FLAG = 'drill-down1'
	BEGIN
		CREATE TABLE #TEMP_RPT_DRILL_DOWN(BRANCH_NAME VARCHAR(100), BRANCH_ID INT, OPENING_BALANCE MONEY, IN_AMOUNT MONEY, OUT_AMOUNT MONEY, CLOSING_BALANCE MONEY
		,VAULT_IN MONEY, VAULT_OUT MONEY, ACCT_TYPE CHAR(1), ACCT_NAME VARCHAR(100), ACCT_NUM VARCHAR(30))

		--CREATE TABLE #ALL_AGENT(AGENT_ID INT, AGENT_NAME VARCHAR(100), ACCT_TYPE CHAR(1))
		INSERT INTO #TEMP_RPT_DRILL_DOWN(BRANCH_ID, BRANCH_NAME, ACCT_TYPE, ACCT_NAME, ACCT_NUM)
		SELECT AGENTID, AC.ACCT_NAME, 'V', AC.ACCT_NAME, AC.ACCT_NUM
		FROM AGENTMASTER AM(NOLOCK)
		INNER JOIN FASTMONEYPRO_ACCOUNT.DBO.AC_MASTER AC(NOLOCK) ON AC.AGENT_ID = AM.AGENTID AND AC.ACCT_RPT_CODE = 'BVA'
		AND AM.AGENTID = @AGENT_ID
		

		INSERT INTO #TEMP_RPT_DRILL_DOWN(BRANCH_ID, BRANCH_NAME, ACCT_TYPE, ACCT_NAME, ACCT_NUM)
		SELECT USERID, AC.ACCT_NAME, 'T', AC.ACCT_NAME, AC.ACCT_NUM
		FROM APPLICATIONUSERS AU(NOLOCK)
		INNER JOIN FASTMONEYPRO_ACCOUNT.DBO.AC_MASTER AC(NOLOCK) ON AC.AGENT_ID = AU.USERID AND AC.ACCT_RPT_CODE = 'TCA'
		AND AU.AGENTID = @AGENT_ID


		CREATE TABLE #TMP(AGENT_ID INT, AMOUNT MONEY)
		
		INSERT INTO #TMP(AGENT_ID, AMOUNT)
		SELECT BRANCH = branchId, OPENING_BALANCE = SUM(inAmount) - SUM(outAmount)
		FROM BRANCH_CASH_IN_OUT_HISTORY B(NOLOCK)
		INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.BRANCHID AND A.ACCT_TYPE = 'V' 
		WHERE tranDate < @DATE
		AND B.APPROVEDDATE IS NOT NULL
		AND B.USERID = 0
		GROUP BY branchId

		INSERT INTO #TMP(AGENT_ID, AMOUNT)
		SELECT BRANCH = USERID, OPENING_BALANCE = SUM(inAmount) - SUM(outAmount)
		FROM BRANCH_CASH_IN_OUT_HISTORY B(NOLOCK)
		INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.USERID AND A.ACCT_TYPE = 'T' 
		WHERE tranDate < @DATE
		AND B.APPROVEDDATE IS NOT NULL
		GROUP BY USERID

		UPDATE TM SET TM.OPENING_BALANCE = T.AMOUNT
		FROM #TMP T
		INNER JOIN #TEMP_RPT_DRILL_DOWN TM ON TM.BRANCH_ID = T.AGENT_ID

		IF (CAST(@DATE AS DATE) = CAST(GETDATE() AS DATE) OR CAST(@DATE AS DATE) > CAST(GETDATE() AS DATE))
		BEGIN
			SELECT inAmount, outAmount, branchId , APPROVEDDATE, tranDate, userId, referenceId, HEAD
			INTO #BRANCH_CASH_IN_OUT1
			FROM BRANCH_CASH_IN_OUT B
			WHERE tranDate BETWEEN @DATE AND @DATE + ' 23:59:59'
			AND B.APPROVEDDATE IS NOT NULL

			DELETE FROM #BRANCH_CASH_IN_OUT1
			WHERE referenceId IN (SELECT referenceId FROM #BRANCH_CASH_IN_OUT1 GROUP BY referenceId HAVING COUNT(1) = 2) 

			SELECT SUM(CASE WHEN HEAD = 'Txn Send' AND USERID = 0 THEN inAmount ELSE 0 END) IN_AMOUNT, 0 OUT_AMOUNT, branchId,
				SUM(CASE WHEN HEAD IN ('TRANSFER TO VAULT AUTO ADJUST') AND USERID = 0 THEN inAmount ELSE 0 END) VAULT_IN, 
				SUM(CASE WHEN HEAD = 'Transfer From Vault' AND USERID = 0 THEN outAmount ELSE 0 END) VAULT_OUT
			INTO #TT_VAULT
			FROM #BRANCH_CASH_IN_OUT1 B(NOLOCK)
			INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.BRANCHID AND A.ACCT_TYPE = 'V'  
			WHERE USERID = 0
			GROUP BY branchId

			SELECT SUM(inAmount) IN_AMOUNT, SUM(outAmount) OUT_AMOUNT, USERID, 0 VAULT_IN, 0 VAULT_OUT
			INTO #TT_TELLER 
			FROM #BRANCH_CASH_IN_OUT1 B(NOLOCK)
			INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.USERID AND A.ACCT_TYPE = 'T'  
			GROUP BY USERID

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT_DRILL_DOWN R
			INNER JOIN #TT_TELLER T ON T.USERID = R.BRANCH_ID

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT_DRILL_DOWN R
			INNER JOIN #TT_VAULT T ON T.BRANCHID = R.BRANCH_ID
		END
		ELSE
		BEGIN
			SELECT inAmount, outAmount, branchId , APPROVEDDATE, tranDate, userId, referenceId, HEAD
			INTO #BRANCH_CASH_IN_OUT_HISTORY1
			FROM BRANCH_CASH_IN_OUT_HISTORY B
			WHERE tranDate BETWEEN @DATE AND @DATE + ' 23:59:59'
			AND B.APPROVEDDATE IS NOT NULL

			DELETE FROM #BRANCH_CASH_IN_OUT_HISTORY1
			WHERE referenceId IN (SELECT referenceId FROM #BRANCH_CASH_IN_OUT_HISTORY1 GROUP BY referenceId HAVING COUNT(1) = 2) 

			SELECT SUM(CASE WHEN HEAD = 'Txn Send' AND USERID = 0 THEN inAmount ELSE 0 END) IN_AMOUNT, 0 OUT_AMOUNT, branchId,
				SUM(CASE WHEN HEAD IN ('TRANSFER TO VAULT AUTO ADJUST') AND USERID = 0 THEN inAmount ELSE 0 END) VAULT_IN, 
				SUM(CASE WHEN HEAD = 'Transfer From Vault' AND USERID = 0 THEN outAmount ELSE 0 END) VAULT_OUT
			INTO #TT_VAULT1
			FROM #BRANCH_CASH_IN_OUT_HISTORY1 B(NOLOCK)
			INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.BRANCHID AND A.ACCT_TYPE = 'V'  
			WHERE USERID = 0
			GROUP BY branchId

			SELECT SUM(inAmount) IN_AMOUNT, SUM(outAmount) OUT_AMOUNT, USERID, 0 VAULT_IN, 0 VAULT_OUT
			INTO #TT_TELLER1
			FROM #BRANCH_CASH_IN_OUT_HISTORY1 B(NOLOCK)
			INNER JOIN #TEMP_RPT_DRILL_DOWN A(NOLOCK) ON A.BRANCH_ID = B.USERID AND A.ACCT_TYPE = 'T'  
			GROUP BY USERID

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT_DRILL_DOWN R
			INNER JOIN #TT_TELLER1 T ON T.USERID = R.BRANCH_ID

			UPDATE R SET R.IN_AMOUNT = T.IN_AMOUNT, R.OUT_AMOUNT = T.OUT_AMOUNT, R.VAULT_IN = T.VAULT_IN, R.VAULT_OUT = T.VAULT_OUT
			FROM #TEMP_RPT_DRILL_DOWN R
			INNER JOIN #TT_VAULT1 T ON T.BRANCHID = R.BRANCH_ID
		END

		

		UPDATE #TEMP_RPT_DRILL_DOWN SET CLOSING_BALANCE = ISNULL(OPENING_BALANCE, 0) + ISNULL(IN_AMOUNT, 0) - ISNULL(OUT_AMOUNT, 0) + ISNULL(VAULT_IN, 0) - ISNULL(VAULT_OUT, 0)
--AccountReport/AccountStatement/StatementDetails.aspx?startDate=2019-07-06&endDate=2019-07-06&acNum=101003966&acName=101003966%20|%20Transit%20Charges%20(Intermediary%20Charge)&curr=&type=a
		SELECT BRANCH_NAME = '<a href=''/AccountReport/AccountStatement/StatementDetails.aspx?endDate='+@DATE+'&type=a&startDate='+@DATE+'&acNum='+ACCT_NUM+'&acName='+ACCT_NAME+'''>'+BRANCH_NAME+'</a>',
			  	OPENING_BALANCE, 
				IN_AMOUNT, 
				OUT_AMOUNT, 
				VAULT_IN,
				VAULT_OUT,
				CLOSING_BALANCE  
		FROM #TEMP_RPT_DRILL_DOWN
		
		DECLARE @AGENT_NAME VARCHAR(100) = (SELECT AGENTNAME FROM AGENTMASTER (NOLOCK) WHERE AGENTID = @AGENT_ID)

		EXEC proc_errorHandler '0', 'Report has been prepared successfully.', NULL
		SELECT  'As Of Date' head, @DATE union all
		SELECT  'Branch' head, @AGENT_NAME

		SELECT  'Cash Status Report - Drill Down ( '+@AGENT_NAME+')' title
	END
END

--EXEC  PROC_CASH_STATUS_REPORT @FLAG = 'drill-down1',@user='admin',@DATE='2019-07-05',@AGENT_ID=394392

--SELECT * FROM APPLICATIONUSERS WHERE USERID=394392
