

ALTER PROC PROC_MAP_BANK_DATA
(
	@FLAG VARCHAR(30) 
	,@USER VARCHAR(50) = NULL
	,@XML NVARCHAR(MAX)	= NULL
	,@API_PARTNER_ID INT = NULL
	,@BANK_COUNTRY VARCHAR(60) = NULL
	,@BANK_CURRENCY VARCHAR(5) = NULL
	,@SESSION_ID VARCHAR(50) = NULL
	,@COUNTRY_CODE VARCHAR(10) = NULL
	,@PAYMENT_TYPE_ID INT = NULL
	,@NO_OF_ROWS VARCHAR(5) = NULL
	,@xmlA	XML = NULL 
	,@IDS VARCHAR(MAX) = NULL
	,@ROW_ID INT = NULL
	,@CHANGED_BANK_ID VARCHAR(10) = NULL
)
AS
SET NOCOUNT ON;
SET XACT_ABORT ON;
BEGIN
	IF @FLAG = 'syncBank'
	BEGIN
		DECLARE @NEW_RECORD INT, @MSG VARCHAR(250)
		IF OBJECT_ID('tempdb..#apiBanks') IS NOT NULL DROP TABLE #apiBanks
		
		DECLARE @XMLDATA XML = CONVERT(xml, replace(@XML,'&','&amp;'), 2) 

		SELECT  IDENTITY(INT, 1, 1) AS rowId
					,p.value('(Id)[1]','VARCHAR(20)') AS 'Id'
					,p.value('(Name)[1]','VARCHAR(150)') AS 'Name'
		INTO #apiBanks
		FROM @XMLDATA.nodes('/ArrayOfBankResponse/BankResponse') AS apiBanks(p)

		---- Check If Bank Details Already Exist for cash payment or not as a payer data
		UPDATE #apiBanks SET Name=LTRIM(RTRIM(Name)),Id=LTRIM(RTRIM(Id))

		UPDATE dbo.API_BANK_LIST SET PAYMENT_TYPE_ID=0
		FROM #apiBanks ab WHERE ab.Id=BANK_CODE1 AND ab.Name=BANK_NAME AND PAYMENT_TYPE_ID=1
		--DELETE EXISTING DATA FROM TEMP TABLEf
		DELETE TMP 
		FROM #apiBanks TMP
		INNER JOIN API_BANK_LIST ABL(NOLOCK) ON ABL.BANK_CODE1 = TMP.Id  AND ABL.BANK_NAME = TMP.Name
		WHERE BANK_COUNTRY = @BANK_COUNTRY
		AND API_PARTNER_ID = @API_PARTNER_ID

		DELETE FROM API_BANK_LIST_TMP
		WHERE SESSION_ID = @SESSION_ID

		--INSERT NEW DATA INTO MAIN TABLE
		INSERT INTO API_BANK_LIST_TMP (API_PARTNER_ID, SESSION_ID, BANK_NAME, BANK_CODE1, SUPPORT_CURRENCY, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE)
		SELECT @API_PARTNER_ID,@SESSION_ID,Name,Id, @BANK_CURRENCY,@BANK_COUNTRY, 2, 1
		FROM #apiBanks

		SELECT @NEW_RECORD = COUNT(1) FROM #apiBanks
		SET @MSG ='Bank synced successfully.' + CAST(@NEW_RECORD AS VARCHAR) + ' new records inserted in system.'

		EXEC proc_errorHandler 0, @MSG, NULL
	END
	ELSE IF @FLAG = 'COUNTRY'
	BEGIN
		SELECT COUNTRYCODE, COUNTRYNAME
		FROM countryMaster (NOLOCK) 
		WHERE ISNULL(ISOPERATIVECOUNTRY, 'N') = 'Y'
		AND OPERATIONTYPE = 'R'
	END
	ELSE IF @FLAG = 'PAYOUT-MODE'
	BEGIN
		SELECT SM.serviceTypeId, SM.typeTitle 
		FROM countryReceivingMode CR(NOLOCK)
		INNER JOIN COUNTRYMASTER CM(NOLOCK) ON CM.COUNTRYID = CR.COUNTRYID
		INNER JOIN serviceTypeMaster SM(NOLOCK) ON SM.serviceTypeId = CR.receivingMode
		WHERE CM.COUNTRYCODE = @COUNTRY_CODE
	END
	ELSE IF @FLAG = 'MASTER-DATA'
	BEGIN
		DECLARE @SQL VARCHAR(300)
		IF NOT EXISTS(SELECT TOP 1 1 FROM API_BANK_LIST_MASTER_TMP M(NOLOCK)
						INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.countryName = M.BANK_COUNTRY 
						WHERE C.countryCode = @COUNTRY_CODE
						AND M.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID)
		BEGIN
			INSERT INTO API_BANK_LIST_MASTER_TMP (BANK_NAME, PARTNER_ID, TMP_BANK_ID, BANK_STATE, BANK_DISTRICT
							, BANK_ADDRESS, BANK_PHONE, BANK_EMAIL, SUPPORT_CURRENCY, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE, JME_BANK_CODE)

			SELECT BANK_NAME, @API_PARTNER_ID, NULL, BANK_STATE, BANK_DISTRICT
							, BANK_ADDRESS, BANK_PHONE, BANK_EMAIL, SUPPORT_CURRENCY, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE, JME_BANK_CODE
			FROM API_BANK_LIST_MASTER M(NOLOCK)
			INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.countryName = M.BANK_COUNTRY 
			WHERE C.countryCode = @COUNTRY_CODE
			AND M.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID
		END

		SET @SQL = 'SELECT TOP ' + @NO_OF_ROWS + ' M.MASTER_BANK_ID, M.BANK_NAME, M.JME_BANK_CODE
		FROM API_BANK_LIST_MASTER_TMP M(NOLOCK)
		INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.COUNTRYNAME = M.BANK_COUNTRY
		WHERE M.TMP_BANK_ID IS NULL
		AND C.COUNTRYCODE = ''' + @COUNTRY_CODE + '''
		AND M.PAYMENT_TYPE_ID = ''' + CAST(@PAYMENT_TYPE_ID AS VARCHAR) +''''

		--PRINT(@SQL)
		EXEC(@SQL)
	END
	ELSE IF @FLAG = 'PARTNER'
	BEGIN
		SELECT AGENTID, AGENTNAME 
		FROM agentMaster (NOLOCK) 
		WHERE ISNULL(ISACTIVE, 'Y') = 'Y'
		AND PARENTID = 0
		AND AGENTID <> 393877
	END
	ELSE IF @FLAG = 'DOWNLOAD-DATA'
	BEGIN
		SELECT ROW_ID, BANK_NAME, BANK_CODE1
		FROM API_BANK_LIST_TMP M(NOLOCK)
		INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.COUNTRYNAME = M.BANK_COUNTRY
		WHERE C.COUNTRYCODE = @COUNTRY_CODE
		AND M.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID
		AND M.API_PARTNER_ID = @API_PARTNER_ID
		--WHERE SESSION_ID = @SESSION_ID
	END
	ELSE IF @FLAG = 'MAP-DATA'
	BEGIN
		SELECT  
		MASTER_ID = p.value('@MASTER_ID', 'varchar(20)') ,
		TEMP_ID = p.value('@TEMP_ID', 'varchar(20)') 
		INTO #TEMP_MAP_DATA
		FROM   @xmlA.nodes('/root/row') AS tmp (p);

		UPDATE M SET M.TMP_BANK_ID = T.TEMP_ID
		FROM #TEMP_MAP_DATA T
		INNER JOIN API_BANK_LIST_MASTER_TMP M (NOLOCK) ON M.MASTER_BANK_ID = T.MASTER_ID
		WHERE ISNULL(T.TEMP_ID, '') <> ''
	END
	ELSE IF @FLAG = 'SHOW-MAP-DATA'
	BEGIN
		SELECT T.MASTER_BANK_ID,T.BANK_NAME MASTER_BANK_NAME, T.JME_BANK_CODE, A.BANK_NAME, A.BANK_CODE1 
		FROM API_BANK_LIST_MASTER_TMP T(NOLOCK)
		INNER JOIN API_BANK_LIST_TMP A(NOLOCK) ON A.ROW_ID = T.TMP_BANK_ID
		INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.COUNTRYNAME = T.BANK_COUNTRY
		WHERE C.COUNTRYCODE = @COUNTRY_CODE
		AND T.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID
		AND T.PARTNER_ID = @API_PARTNER_ID
	END
	ELSE IF @FLAG = 'SHOW-MISSING-DATA'
	BEGIN
		SELECT A.BANK_NAME, A.BANK_CODE1, A.ROW_ID
		FROM API_BANK_LIST_TMP A(NOLOCK)
		LEFT JOIN API_BANK_LIST_MASTER_TMP T(NOLOCK) ON A.ROW_ID = T.TMP_BANK_ID
		INNER JOIN COUNTRYMASTER C(NOLOCK) ON C.COUNTRYNAME = A.BANK_COUNTRY
		WHERE T.MASTER_BANK_ID IS NULL
		AND C.COUNTRYCODE = @COUNTRY_CODE
		AND A.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID
	END
	ELSE IF @FLAG = 'SAVE-MISSING-DATA'
	BEGIN
		SET @SQL = 'SELECT BANK_NAME, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE
		FROM API_BANK_LIST_TMP T(NOLOCK) WHERE ROW_ID IN (' + @IDS + ')'

		--INSERT INTO API_BANK_LIST_MASTER_TMP(BANK_NAME, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE, PARTNER_ID)
		--EXEC(@SQL)

		--SET @SQL = 'SELECT BANK_NAME, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE
		--FROM API_BANK_LIST_TMP T(NOLOCK) WHERE ROW_ID IN (' + @IDS + ')'
		
		INSERT INTO API_BANK_LIST_MASTER(BANK_NAME, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE)
		EXEC(@SQL)

		SELECT * FROM API_BANK_LIST_MASTER M
		LEFT JOIN API_BANK_LIST_MASTER_TMP T ON T.JME_BANK_CODE = M.JME_BANK_CODE
		WHERE T.JME_BANK_CODE IS NULL
		
		UPDATE API_BANK_LIST_MASTER SET JME_BANK_CODE = 'JME' + RIGHT('0000000000'+CAST(MASTER_BANK_ID AS VARCHAR), 7)
		WHERE JME_BANK_CODE IS NULL

		INSERT INTO API_BANK_LIST_MASTER_TMP(BANK_NAME, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE, PARTNER_ID)
		SELECT M.BANK_NAME, M.BANK_COUNTRY, M.PAYMENT_TYPE_ID, M.IS_ACTIVE, @API_PARTNER_ID
		FROM API_BANK_LIST_MASTER M
		LEFT JOIN API_BANK_LIST_MASTER_TMP T ON T.JME_BANK_CODE = M.JME_BANK_CODE
		WHERE T.JME_BANK_CODE IS NULL


		EXEC proc_errorHandler 0, 'Success!', null
	END
	ELSE IF @FLAG = 'FINAL-SAVE'
	BEGIN
		IF EXISTS(SELECT TOP 1 1
					FROM API_BANK_LIST_TMP A(NOLOCK)
					LEFT JOIN API_BANK_LIST_MASTER_TMP T(NOLOCK) ON A.ROW_ID = T.TMP_BANK_ID
					WHERE T.JME_BANK_CODE IS NULL)
		BEGIN
			EXEC proc_errorHandler 1, 'All the data are not mapped, please map all data and try again!', null
			RETURN
		END

		IF EXISTS (SELECT TOP 1 1 FROM API_BANK_LIST A(NOLOCK) 
					INNER JOIN countryMaster C(NOLOCK) ON C.COUNTRYNAME = A.BANK_COUNTRY
					WHERE A.API_PARTNER_ID = @API_PARTNER_ID 
					AND C.countryCode = @COUNTRY_CODE
					AND A.PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID)
		BEGIN
			EXEC proc_errorHandler 1, 'Mapping for this partner for the country, payment type is done!', null
			RETURN
		END

		INSERT INTO API_BANK_LIST(BANK_NAME, API_PARTNER_ID, BANK_CODE1, BANK_CODE2, BANK_STATE, BANK_DISTRICT, BANK_ADDRESS,
				BANK_PHONE, BANK_EMAIL, SUPPORT_CURRENCY, BANK_COUNTRY, PAYMENT_TYPE_ID, IS_ACTIVE, JME_BANK_CODE)

		SELECT A.BANK_NAME, A.API_PARTNER_ID, A.BANK_CODE1, A.BANK_CODE2, A.BANK_STATE, A.BANK_DISTRICT, A.BANK_ADDRESS,
				A.BANK_PHONE, A.BANK_EMAIL, A.SUPPORT_CURRENCY, A.BANK_COUNTRY, A.PAYMENT_TYPE_ID, A.IS_ACTIVE, T.JME_BANK_CODE
		FROM API_BANK_LIST_MASTER_TMP T(NOLOCK)
		INNER JOIN API_BANK_LIST_TMP A(NOLOCK) ON A.ROW_ID = T.TMP_BANK_ID

		TRUNCATE TABLE API_BANK_LIST_MASTER_TMP
		TRUNCATE TABLE API_BANK_LIST_TMP

		EXEC proc_errorHandler 0, 'Success!', null
	END
	ELSE IF @FLAG = 'SAVE-EDITED-BANK-MAPPING'
	BEGIN
		IF ISNULL(@CHANGED_BANK_ID,'') = ''
		BEGIN
			SELECT '1' ErrorCode,'Please select bank properly' Msg, @CHANGED_BANK_ID id
			RETURN ;
		END
		IF ISNULL(@BANK_COUNTRY,'') = ''
		BEGIN
			SELECT '1' ErrorCode,'Bank Country is required' Msg, @BANK_COUNTRY id
			RETURN ;
		END
		IF ISNULL(@API_PARTNER_ID,'') = ''
		BEGIN
			SELECT '1' ErrorCode,'Partner is missing' Msg, @API_PARTNER_ID id
			RETURN ;
		END
		IF ISNULL(@PAYMENT_TYPE_ID,'') = ''
		BEGIN
			SELECT '1' ErrorCode,'Paymnet type is missing' Msg, @PAYMENT_TYPE_ID id
			RETURN ;
		END
		
		DECLARE @CURRENT_ROW_ID INT
		SELECT @CURRENT_ROW_ID = ROW_ID FROM API_BANK_LIST_TMP WHERE BANK_CODE1 = @CHANGED_BANK_ID

		UPDATE API_BANK_LIST_MASTER_TMP SET TMP_BANK_ID = @CURRENT_ROW_ID
				WHERE MASTER_BANK_ID = @ROW_ID
				AND BANK_COUNTRY = @BANK_COUNTRY
				 AND PARTNER_ID = @API_PARTNER_ID
				 AND PAYMENT_TYPE_ID = @PAYMENT_TYPE_ID
		SELECT '0' ErrorCode,'Data Edited Successfully' Msg, @CHANGED_BANK_ID id
	END
END


